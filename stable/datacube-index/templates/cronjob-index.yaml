{{- if .Values.cron.enabled }}
{{- $externalDb := .Values.global.externalDatabase }}
{{- $dc := .Values.global.datacube }}
{{- $index := .Values.index }}
{{- $image := .Values.global.image }}
{{- $res := .Values.resources }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "datacube-index.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "datacube-index.name" . }}
    helm.sh/chart: {{ include "datacube-index.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    heritage: {{ include "datacube-index.fullname" . }}
spec:
  schedule: {{ .Values.cron.schedule | quote }}
  concurrencyPolicy: {{ .Values.cron.concurrencyPolicy}}
  successfulJobsHistoryLimit: {{ .Values.cron.historyLimit}}
  failedJobsHistoryLimit: {{ .Values.cron.historyLimit }}
  suspend: {{ .Values.cron.suspend }}
  backoffLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ include "datacube-index.fullname" . }}
          labels:
            app.kubernetes.io/name: {{ include "datacube-index.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            heritage: {{ include "datacube-index.fullname" . }}
          annotations:
          {{- range $key, $value := .Values.annotations }}
            {{ $key }}: {{ $value | quote }}
          {{- end }}
        spec:
          restartPolicy: Never
          initContainers:
          - name: postgres-listener
            image: alpine
            command: ["sh", "-c", "for i in $(seq 1 200); do nc -z -w3 {{ $externalDb.host }} {{ $externalDb.port }} && exit 0 || sleep 3; done; exit 1"]
          containers:
          - name: datacube-index
            image: "{{ $image.repository }}:{{ $image.tag }}"
            imagePullPolicy: {{ $image.pullPolicy }}
            args: [ {{- range $index.dockerArgs }} {{ . | quote }}, {{ end -}} ]
            resources:
              limits:
                cpu: {{ $res.limits.cpu }}
                memory: {{ $res.limits.memory }}
              requests:
                cpu: {{ $res.requests.cpu }}
                memory: {{ $res.requests.memory }}
            env:
              - name: WMS_CONFIG_URL
                value: {{ $index.wmsConfigURL | quote }}
              - name: PRODUCT_URLS
                value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.products }}
            {{- if $index.product_ranges }}
              - name: DC_RANGES_PRODUCT
                value: {{ $index.product_ranges | quote }}
            {{- end }}
            {{- if $index.multiproduct_ranges }}
              - name: DC_RANGES_MULTIPRODUCT
                value: {{ $index.multiproduct_ranges | quote }}
            {{- end }}
            {{- if $index.exclude_product }}
              - name: DC_EXCLUDE_PRODUCT
                value: {{ $index.exclude_product | quote }}
            {{- end }}
            {{- if $index.thredds_days }}
              - name: DC_THREDDS_DAYS
                value: {{ $index.thredds_days | quote }}
            {{- end }}
              - name: DC_S3_INDEX_BUCKET
                value: {{ $index.bucket | quote }}
              - name: DC_S3_INDEX_PREFIX
                value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.prefix }}
              - name: DC_S3_INDEX_SUFFIX
                value: {{ $index.suffix | quote }}
              - name: DC_S3_IGNORE_SUFFIX
                value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.ignore }}
              - name: DC_INDEX_YAML_SAFETY
                value: {{ $index.yaml_safety | quote }}
            {{- if $index.ignore_lineage }}
              - name: DC_IGNORE_LINEAGE
                value: {{ $index.ignore_lineage | quote }}
            {{- end }}
              - name: DB_HOSTNAME
                value: {{ $externalDb.host | quote }}
              - name: DB_PORT
                value: {{ $externalDb.port | quote }}
              - name: DB_DATABASE
                value: {{ $externalDb.database | quote }}
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ $externalDb.database }}
                    key: postgres-username
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ $externalDb.database }}
                    key: postgres-password
          {{- if $index.additionalEnvironmentVars }}
          {{- range $arg, $value := $index.additionalEnvironmentVars }}
              - name: {{ $arg | quote }}
                value: {{ $value | quote }}
          {{- end }}
          {{- end }}
{{- end }}
