apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "datacube.fullname" . }}-dc-init
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: "{{ include "datacube.name" . }}-dc-init"
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      dnsConfig:
        options:
          - name: single-request-reopen
      initContainers:
      - name: wait-for
        image: alpine:latest
        args:
        - "/bin/sh"
        - "-c"
        - >
          wget https://raw.githubusercontent.com/eficode/wait-for/f71f8199a0dd95953752fb5d3f76f79ced16d47d/wait-for;
          chmod +x wait-for;
          ./wait-for {{ .Values.database.host }}:{{ .Values.database.port }}
      containers:
      - name: initialize-datacube
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args:
        - "/bin/bash"
        - "-c"
        - datacube system check || datacube system init --no-init-users
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DB_HOSTNAME
          value: {{ .Values.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.database.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.database.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "datacube.secretName" . }}
              key: postgres-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "datacube.secretName" . }}
              key: postgres-password
      restartPolicy: Never
