{{- if .Values.ingress.enabled -}}
{{- $ingressClassName := .Values.ingress.ingressClassName -}}
{{- $fullName := include "datacube-explorer.fullname" . -}}
{{- $ingressPath := .Values.ingress.path -}}
{{- $ingressRedirect := .Values.ingress.redirect -}}
{{- $ingressPathType := .Values.ingress.pathType -}}
{{- $externalPort := .Values.externalPort -}}

{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "datacube-explorer.name" . }}
    helm.sh/chart: {{ include "datacube-explorer.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if $ingressClassName -}}
  ingressClassName: {{ $ingressClassName }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $ingressPath }}
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $externalPort }}
    {{- end }}
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress" }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "datacube-explorer.name" . }}
    helm.sh/chart: {{ include "datacube-explorer.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  rules:
    {{- if $ingressRedirect -}}
    {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: {{ $ingressPath }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $externalPort }}
    {{- end }}
    {{- else }}
    {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $ingressPath }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $externalPort }}
    {{- end }}
    {{- end }}
{{- end }}
{{- end }}