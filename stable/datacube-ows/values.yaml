# Default values for datacube-wms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
minReplicas: 1
maxReplicas: 2
# serviceAccount -- See configuration below
serviceAccount: {}
# If using IRSA the service account can be configured by replacing the ${...} variables with your deployments values
# serviceAccount:
#   enabled: True
#   name: ${service_account_name}
#   annotations:
#     eks.amazonaws.com/role-arn: ${service_account_role_arn}
# securityContext:
#   fsGroup: 65534 # For datacube-ows to read Kubernetes and AWS token files


clusterInfo:
  envName: dev
database:
  existingSecret:
  database: datacube
  host: localhost
  port: 5432


##
## Datacube OWS configuration
##
ows:
  image:
    registry: docker.io
    repository: opendatacube/ows
    tag: latest
    pullPolicy: Always
  enabled: true
  maxSurge: 25%
  maxUnavailable: 25%
  externalPort: 80
  internalPort: 8000
  resources:
    limits:
      cpu: "1"
      memory: 2048Mi
  targetCpu: 10
  dockerArgs: [ "gunicorn", "-b", "0.0.0.0:8000", "-w", "4", "--keep-alive", "50", "--timeout", "120", "datacube_wms.wsgi" ]
  autoscaling: True
  annotations:
    iam.amazonaws.com/role: kubernetes-wms
  livenessProbe: {}
  readinessProbe: {}
  startupProbe: {}
  # ows.securityContext -- Deployment level security context
  securityContext: {}
owsConfig:
  image:
    registry: docker.io
    repository: geoscienceaustralia/dea-datakube-config
    tag: latest
    pullPolicy: Always
  # owsConfig.securityContext -- Container level security context
  securityContext: {}

pyspy:
  image: {}
##
## Prometheus Monitoring
##
prometheus:
  enabled: false
  path: "/opt/prometheus/"

##
## cProfiling, only enable for debugging and profiling purposes
##
profiling:
  enabled: true
  path: "/opt/profiling/"

service:
  type: NodePort

affinity: {}

tolerations: {}

ingress:
  ## Enable Ingress.
  ##
  enabled: false
  host:
