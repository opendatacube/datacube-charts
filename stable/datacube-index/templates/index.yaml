{{- $dc := .Values.datacube }}
{{- $index := .Values.index }}
{{- $image := .Values.image }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{template "datacube-index.fullname" .}}
  labels:
    app.kubernetes.io/name: {{ include "datacube-index.name" . }}
    helm.sh/chart: {{ include "datacube-index.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ include "datacube-index.fullname" . }}
      labels:
        heritage: {{ include "datacube-index.fullname" . }}
        release: {{ .Release.Name }}
      annotations:
{{ toYaml $index.annotations | indent 8 }}
    spec:
      # Turning single-request-reopen option on would fix issue where in two requests from the same port are
      # not handled correctly it will close the socket and open a new one before sending the second request.
      dnsConfig:
        options:
          - name: single-request-reopen
      initContainers:
      - name: postgres-listener
        image: alpine
        command: ["sh", "-c", "for i in $(seq 1 200); do nc -z -w3 {{ .Values.database.host }} {{ .Values.database.port }} && exit 0 || sleep 3; done; exit 1"]
{{- if .Values.wmsConfig.image }}
      - name: wms-config
        image: "{{ $.Values.wmsConfig.image.repository }}:{{ $.Values.wmsConfig.image.tag }}"
        imagePullPolicy: {{ $.Values.wmsConfig.image.pullPolicy }}
        args: [ "cp", "-f", "{{ .Values.wmsConfig.image.src }}", "{{ .Values.wmsConfig.path }}/{{ .Values.wmsConfig.filename }}" ]
        volumeMounts:
        - mountPath: {{ .Values.wmsConfig.path }}
          name: wms-config-volume
{{- if .Values.wmsConfig.subpath }}
          subPath: {{ .Values.wmsConfig.subpath }}
{{- end }}
{{- end }}
      containers:
      - name: datacube-index
        image: "{{ $image.repository }}:{{ $image.tag }}"
        imagePullPolicy: {{ $image.pullPolicy }}
        args: [ {{- range $index.dockerArgs }} {{ . | quote }}, {{ end -}} ]
        resources:
{{ toYaml $index.resources | indent 10 }}
        env:
        - name: WMS_CONFIG_URL
{{- if $index.wmsConfigURL }}
          value: {{ $index.wmsConfigURL | quote }}
{{- else }}
          value: {{ $dc.wmsConfigURL | quote }}
{{- end }}
{{- if or .Values.wmsConfig.configMap .Values.wmsConfig.image }}
          - value: "{{ .Values.wmsConfig.path }}/{{ .Values.wmsConfig.filename }}"
            name: WMS_CONFIG_PATH
{{- end }}
{{- if $index.products }}
        - name: PRODUCT_URLS
          value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.products }}
{{- else if $dc.products}}
        - name: PRODUCT_URLS
          value: {{ template "helm-toolkit.utils.joinListWithSpace" $dc.products }}
{{- end }}
{{- if $index.product_ranges }}
        - name: DC_RANGES_PRODUCT
          value: {{ $index.product_ranges | quote }}
{{- end }}
{{- if $index.multiproduct_ranges }}
        - name: DC_RANGES_MULTIPRODUCT
          value: {{ $index.multiproduct_ranges | quote }}
{{- end }}
{{- if $index.exclude_product }}
        - name: DC_EXCLUDE_PRODUCT
          value: {{ $index.exclude_product | quote }}
{{- end }}
{{- if $index.thredds_days }}
        - name: DC_THREDDS_DAYS
          value: {{ $index.thredds_days | quote }}
{{- end }}
        - name: DC_S3_INDEX_BUCKET
          value: {{ $index.bucket | quote }}
        - name: DC_S3_INDEX_PREFIX
          value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.prefix }}
        - name: DC_S3_INDEX_SUFFIX
          value: {{ $index.suffix | quote }}
        - name: DC_S3_IGNORE_SUFFIX
          value: {{ template "helm-toolkit.utils.joinListWithSpace" $index.ignore }}
        - name: DC_INDEX_YAML_SAFETY
          value: {{ $index.yaml_safety | quote }}
{{- if $index.ignore_lineage }}
        - name: DC_IGNORE_LINEAGE
          value: {{ $index.ignore_lineage | quote }}
{{- end }}
        - name: DB_HOSTNAME
          value: {{ .Values.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.database.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.database.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.existingSecret }}
              key: postgres-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.existingSecret }}
              key: postgres-password
{{- if $index.additionalEnvironmentVars }}
{{- range $arg, $value := $index.additionalEnvironmentVars }}
        - name: {{ $arg | quote }}
          value: {{ $value | quote }}
{{- end }}
{{- end }}
        # Mount the config volume
        volumeMounts:
{{- if or .Values.wmsConfig.configMap .Values.wmsConfig.image }}
          - mountPath: {{ .Values.wmsConfig.path }}
            name: wms-config-volume
{{- end }}  
      restartPolicy: Never
      # Define the config volume
      volumes:
{{- if or .Values.wmsConfig.configMap .Values.wmsConfig.image }}
      - name: wms-config-volume
{{- if .Values.wmsConfig.configMap }}
        configMap:
          name: {{ .Values.wmsConfig.configMap }}
{{- else if .Values.wmsConfig.image }}
        emptyDir: {}
{{- end }}
{{- end }}
